name: Create release and deploy

on:
  push:
    tags:
      - '*'

jobs:
  set_version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - name: Navigate to library
      run: cd ./projects/ngx-ccu-jack-client/
    - name: Bumb version
      run: npm version ${{ github.ref }}
    
  build:
    needs: set_version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - name: Install Angular
      run: npm install -g @angular/cli
    - run: npm ci
    - run: npm run build
    - uses: actions/upload-artifact@v2
      with:
        name: build artifacts
        path: dist/ngx-ccu-jack-client/
        
  test:
    needs: set_version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: 16
    - name: Install Angular
      run: npm install -g @angular/cli
    - run: npm ci
    - run: npm run test
    - uses: actions/upload-artifact@v2
      with:
        name: test artifacts
        path: dist/reports/

  publish_npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - uses: actions/download-artifact@v2
        with:
          name: build artifacts
          path: dist/ngx-ccu-jack-client
      - run: cd dist/ngx-ccu-jack-client
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
    
  create_release:
    needs: [build, test]
    runs-on: ubunut-latest
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build artifacts
        path: dist/ngx-ccu-jack-client
    - name: ZIP build artifacts
      run: 7z a -tzip /ngx-ccu-jack-client.zip dist/ngx-ccu-jack-client/*
    - name: Download test artifacts
      uses: actions/download-artifact@v2
      with:
        name: test artifacts
        path: dist/reports
    - name: ZIP test artifacts
      run: 7z a -tzip /test-and-code-coverage-reports.zip dist/reports/*
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        body: |
            Install this version of `ngx-ccu-jack-client` from npm:

            ``` bash
            npm install ngx-ccu-jack-client@${{ github.ref }} --save
            ```
            
        draft: false
        prerelease: false
    - name: Upload build artifacts to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./ngx-ccu-jack-client.zip
        asset_name: ngx-ccu-jack-client.zip
        asset_content_type: application/zip
    - name: Upload test artifacts to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./test-and-code-coverage-reports.zip
        asset_name: test-and-code-coverage-reports.zip
        asset_content_type: application/zip

